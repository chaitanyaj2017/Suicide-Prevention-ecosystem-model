/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.PoliceWorkArea;

import Business.CriminalRecord.Crime;
import Business.CriminalRecord.CriminalRecord;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PoliceDepartmentOrganization;
import Business.Person.Person;
import Business.SexualAssault.SexualAssualtEval;
import Business.User.UserAccount;
import Business.WorkRequest.WorkRequest;
import Business.WorkRequest.WorkResponse;
import java.awt.CardLayout;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Chinmay
 */
public class DummyInterrogatePanel extends javax.swing.JPanel {

    /**
     * Creates new form DummyPoliceWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Person person;
    private UserAccount account;
    private Organization organisation;
    private Enterprise etrp;
    private EcoSystem business;

    DummyInterrogatePanel(JPanel userProcessContainer, Person p, UserAccount account, Organization organisation, Enterprise etrp, EcoSystem business) {
       initComponents();     
         this.userProcessContainer=userProcessContainer;
         this.person=p;
         this.account=account;
         this.organisation=organisation;
         this.etrp=etrp;
         this.business=business;
         
         populateCrimeCombo();
         populateCrimeSubTypeCombo();
         populateEffectonVictimCombo();
         populateTorturelevelCombo();
         populateCompulsiveFactorCombo();
         populateCrimeSeverityCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        chargeBtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        CrimeComboBox = new javax.swing.JComboBox();
        CrimeSubTypeCombo = new javax.swing.JComboBox<>();
        VictimEffectCombo = new javax.swing.JComboBox<>();
        CompulsiveFactorCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        TortureCombobox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        CrimeSeverityCombo = new javax.swing.JComboBox<>();

        jLabel1.setText("INTERROGATION PANEL");

        jLabel2.setText("CRIME");

        jLabel3.setText("CRIME SUBTYPE");

        jLabel5.setText("EFFECT ON VICTIM");

        jLabel6.setText("COMPULSIVE FACTOR");

        chargeBtn.setText("CHARGE");
        chargeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeBtnActionPerformed(evt);
            }
        });

        backbtn.setText("back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        CrimeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CrimeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrimeComboBoxActionPerformed(evt);
            }
        });

        CrimeSubTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        VictimEffectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CompulsiveFactorCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("TORTURE LEVEL");

        TortureCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("CRIME SEVERITY LEVEL");

        CrimeSeverityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CrimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CrimeSubTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VictimEffectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompulsiveFactorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(backbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chargeBtn)
                .addGap(81, 81, 81))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TortureCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CrimeSeverityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CrimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CrimeSubTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(VictimEffectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CompulsiveFactorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(TortureCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(CrimeSeverityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbtn)
                    .addComponent(chargeBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chargeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeBtnActionPerformed
        WorkResponse workRequest=new WorkResponse();
        //        if(!workRequest.getOl().equals(WorkRequest.OperationalLevel.Police))
        //            {
            //             JOptionPane.showMessageDialog(null,"Request is being serviced at "+workRequest.getOl().name() +" operational level","WARNING",JOptionPane.WARNING_MESSAGE);
            //             return;
            //            }

        PoliceDepartmentOrganization policeorg =(PoliceDepartmentOrganization) organisation;
        person.setPreliminaryCheck(true);
        CriminalRecord crec=null;
        // MedicalRecord mr=laborg.getMedicalRecDir().addMedicalRecord();
        for(CriminalRecord cr1:policeorg.getCriminalRecDir().getLstCriminalRecord())
        {
            if(cr1.getPerson()==person)
            {
                crec=cr1;
            }
        }
        if(crec==null)
        {
            crec = policeorg.getCriminalRecDir().addCriminalRecord();
        }

        // mr.getVitalSign().setBloodPressure(hbp);
        //        mr.getVitalSign().setHeartRate(hr);
        //        mr.setAlcoholResults(at);
        //        mr.setDrugTestResults(dt);

        //  mr.setPerson(person);
        // Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseTypeJComboBox.getSelectedItem();

        Crime.CrimeType cr  = (Crime.CrimeType)CrimeComboBox.getSelectedItem();
        String subcr  = (String)CrimeSubTypeCombo.getSelectedItem();
        Random r= new Random();
        int x  = r.nextInt(4)+1;
        ;

        int ef =Integer.parseInt(VictimEffectCombo.getSelectedItem().toString());
        int tr =Integer.parseInt(TortureCombobox.getSelectedItem().toString());
        int cf  = Integer.parseInt(CompulsiveFactorCombo.getSelectedItem().toString());
        int crsev = Integer.parseInt(CrimeSeverityCombo.getSelectedItem().toString());

        int sum  = ef+tr+cf+crsev;
        System.out.println(sum*x);
        SexualAssualtEval sobj = new SexualAssualtEval();
        sobj.setCrimeAnalysisIndex(sum);
        //    int severity  = Integer.parseInt(TxtCrimeSeverity.getText());
        //         if (severity>5)
        //         {
            //             JOptionPane.showMessageDialog(null, "Severity should be between 1 to 5");
            //         }
        //         String iscompulsive = TxtCompulsive.getText();
        //         if(!(iscompulsive.equalsIgnoreCase("yes"))||!(iscompulsive.equalsIgnoreCase("no")))
        //         {
            //            JOptionPane.showMessageDialog(null,"Please answer in 'YES'  or  'NO'");
            //         }
        //
        //         String isEdu = TxtEducation.getText();
        //         if(!(isEdu.equalsIgnoreCase("yes"))||!(isEdu.equalsIgnoreCase("no")))
        //         {
            //            JOptionPane.showMessageDialog(null,"Please answer in 'YES'  or  'NO'");
            //         }
        //WorkResponse workRequest=new WorkResponse();

        Crime c =    crec.addCrime();
        c.setCrimeTypeVal(Crime.CrimeType.SexualAssault);
        //     int threat;//1-5
        //     //3+2
        //     int sum1=0;
        //     int threat1=0;
        //     sum1=3
        //             threat1=1;
        //             sum1=threat1+sev;
        //     int sev=0;
        //     2
        //     if(c.getCrimeTypeVal().equals(Crime.CrimeType.SexualAssault))
        //     {

            //         //Normal work flow
            //     }
        //     else
        //     {
            //
            //         //other organiszation
            //     }
        c.setCrimeTypeVal(cr);
        if(person.getAge()<18)
        {
            c.setCriminalType("juvenile");
        }
        c.setSeverityLevel(crsev);

        crec.setPerson(person);
        //  DoctorOrganization docOrg=null;
        workRequest.setSender(account);
        workRequest.setReceiver(null);
        workRequest.setPerson(person);

        account.getWorkQueue().getLstWorkRequest().add(workRequest);

        sobj.setPer(person);
        workRequest.getResult()[0]= sobj;

        //  workRequest.setOl(WorkResponse.OperationalLevel.Police);
        // TODO add your handling code here:

        if(c.getCrimeTypeVal().equals(Crime.CrimeType.SexualAssault)&&(person.getAge()<18))
        {
            etrp.getWorkQueue().getLstWorkRequest().add(workRequest);
            workRequest.setOl(WorkResponse.OperationalLevel.Security);
            workRequest.setRtype(WorkRequest.RequestType.CrimePrevention);
            workRequest.setStatus("Pending - Sent to Security Admin");
            JOptionPane.showMessageDialog(null,"This criminal needs to be further rehabilitated,Request sent to Security Enterprise");
            //           // Sec sec  = null;
            //
            //            EducationInstituteEnterprise en  = null;
            //            RegistrationOrganization reg = null;
            //
            //            for(Network net  : business.getNetworkDir().getLstNetwork())
            //            { for (Enterprise et : net.getEnterpriseDir().getLstEnterprises())
                //                {
                    //                    if(et instanceof EducationInstituteEnterprise)
                    //                    {
                        //                        en  = (EducationInstituteEnterprise)et;
                        //                        break;
                        //
                        //                    }
                    //
                    //
                    //                }
                //                 if(en!= null)
                //                    {
                    //                       break;
                    //                    }
                //                }
            //            if(en!= null)
            //            {
                //               for(Organization org : en.getOrdDir().getLstOrganisation())
                //               {
                    //                  if(org instanceof RegistrationOrganization)
                    //                  {
                        //                      reg = (RegistrationOrganization)org;
                        //                      break;
                        //                  }
                    //
                    //               }
                //
                //                workRequest.setReceiver(null);
                //             // wr.setOl(WorkRequest.OperationalLevel.SP);
                //              workRequest.setStatus("Pending-Request sent to Registration Organization");
                //              account.getWorkQueue().getLstWorkRequest().add(workRequest);
                //              reg.getWorkQueue().getLstWorkRequest().add(workRequest);
                //              JOptionPane.showMessageDialog(null,"Request sent to Registration Organization");
                //             // populateWorkRequest();

            }

            organisation.getWorkQueue().getLstWorkRequest().add(workRequest);
            // workRequest.setOl(WorkRequest.OperationalLevel.Security);
            //         workRequest.setStatus("Pending -sent to Security Admin");
            //         JOptionPane.showMessageDialog(null,"The suspect needs assistance from the Rehab programs");
            //
            chargeBtn.setEnabled(false);

    }//GEN-LAST:event_chargeBtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_backbtnActionPerformed

    private void CrimeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrimeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrimeComboBoxActionPerformed

 private void populateCrimeCombo() {
        
//         for (Crime.CrimeType type : Crime.CrimeType.values()) {
//            CrimeComboBox.addItem(type);
//        }
        
       CrimeComboBox.removeAllItems();
        
//            CrimeComboBox.addItem("Sexual Assault");
//            CrimeComboBox.addItem("Other");
              for (Crime.CrimeType type : Crime.CrimeType.values()) {
            CrimeComboBox.addItem(type);
        
              }   
// throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void populateCrimeSubTypeCombo() {
        CrimeSubTypeCombo.removeAllItems();
        CrimeSubTypeCombo.addItem("Eve teasing");
        CrimeSubTypeCombo.addItem("Rape");
        CrimeSubTypeCombo.addItem("verbal Abuse");
        CrimeSubTypeCombo.addItem("Molestation");
        CrimeSubTypeCombo.addItem("Physical Violenece");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void populateEffectonVictimCombo() {
        VictimEffectCombo.removeAllItems();
        VictimEffectCombo.addItem("1");
        VictimEffectCombo.addItem("2");
        VictimEffectCombo.addItem("3");
        VictimEffectCombo.addItem("4");
        VictimEffectCombo.addItem("5");
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void populateTorturelevelCombo() {
        TortureCombobox.removeAllItems();
        TortureCombobox.addItem("1");
        TortureCombobox.addItem("2");
        TortureCombobox.addItem("3");
        TortureCombobox.addItem("4");
        TortureCombobox.addItem("5");
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void populateCompulsiveFactorCombo() {
         CompulsiveFactorCombo.removeAllItems();
        CompulsiveFactorCombo.addItem("1");
        CompulsiveFactorCombo.addItem("2");
        CompulsiveFactorCombo.addItem("3");
       CompulsiveFactorCombo.addItem("4");
        CompulsiveFactorCombo.addItem("5");
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
     private void populateCrimeSeverityCombo() {
           CrimeSeverityCombo.removeAllItems();
        CrimeSeverityCombo.addItem("1");
        CrimeSeverityCombo.addItem("2");
        CrimeSeverityCombo.addItem("3");
       CrimeSeverityCombo.addItem("4");
        CrimeSeverityCombo.addItem("5");
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CompulsiveFactorCombo;
    private javax.swing.JComboBox CrimeComboBox;
    private javax.swing.JComboBox<String> CrimeSeverityCombo;
    private javax.swing.JComboBox<String> CrimeSubTypeCombo;
    private javax.swing.JComboBox<String> TortureCombobox;
    private javax.swing.JComboBox<String> VictimEffectCombo;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton chargeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
